# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17NyuUZZjFGS_R5DuZtD_xYNuAV7vdfPi

**Hill and Valley Prediction with Logistic Regression**

**Objective**

  The main aim of this model is to predict the chance of occurrence of a hill or valley, so that the drivers will be alert and which might reduce the chance of accidents.

**Data Source**

https://github.com/YBI-Foundation/Dataset

**Import Library**
"""

import pandas as pd

"""**Import Data**


"""

hillvalley = pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Hill%20Valley%20Dataset.csv')

"""**Describe Data**"""

hillvalley.describe()

"""**Data Visualisation**"""

hillvalley.head(10)

"""**Data Preprocessing**"""

hillvalley.info()

hillvalley.shape

hillvalley.columns

print(hillvalley.columns.tolist())

"""**Define Target Variable (y) and Feature Variables (X)**"""

y=hillvalley['Class']
X=hillvalley[['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10', 'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20', 'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'V29', 'V30', 'V31', 'V32', 'V33', 'V34', 'V35', 'V36', 'V37', 'V38', 'V39', 'V40', 'V41', 'V42', 'V43', 'V44', 'V45', 'V46', 'V47', 'V48', 'V49', 'V50', 'V51', 'V52', 'V53', 'V54', 'V55', 'V56', 'V57', 'V58', 'V59', 'V60', 'V61', 'V62', 'V63', 'V64', 'V65', 'V66', 'V67', 'V68', 'V69', 'V70', 'V71', 'V72', 'V73', 'V74', 'V75', 'V76', 'V77', 'V78', 'V79', 'V80', 'V81', 'V82', 'V83', 'V84', 'V85', 'V86', 'V87', 'V88', 'V89', 'V90', 'V91', 'V92', 'V93', 'V94', 'V95', 'V96', 'V97', 'V98', 'V99', 'V100']]

""" **Train Test Split**"""

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=2529)

X_train.shape,X_test.shape,y_train.shape,y_test.shape

"""**Modeling**"""

from sklearn.linear_model import LogisticRegression
model=LogisticRegression(max_iter=10000)

model.fit(X_train,y_train)

"""**Prediction**"""

y_pred=model.predict(X_test)

y_pred

"""**Model Evaluation**"""

from sklearn.metrics import confusion_matrix,classification_report

confusion_matrix(y_test,y_pred)

classification_report(y_test,y_pred)

"""**Explanation**

In this model we predict the chance of occurrence of a hill or valley with the help of our data set.







"""